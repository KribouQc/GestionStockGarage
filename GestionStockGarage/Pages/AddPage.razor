@page "/addpage"
@page "/modif/{IdPiece}"

@using GestionStockGarage.Models
@using System.IO
@using System.Text.Json
@inject GestionStockGarage.Repository.IStockRepository stock

<h1>Ajout d'un article</h1>
@if (!string.IsNullOrEmpty(valeurAction))
{
    <br />
    <div class="alert alert-success" role="alert">@valeurAction</div>

}

<EditForm OnValidSubmit="@OnSubmit" Model="piece">
    <div class="form">
        <div class="form-group col-sm-4">
            <label>Référence</label>
            <InputText @bind-Value="piece.Reference" class="form-control" />
        </div>
        <div class="form-group col-sm-4">
            <label>Designation</label>
            <InputText @bind-Value="piece.Designation" class="form-control" />
        </div>
        <div class="form-group col-sm-4">
            <label>Emplacement</label>
            <InputText @bind-Value="piece.Emplacement" class="form-control" />
        </div>
        <div class="form-group col-sm-4">
            <label>Prix unitaire</label>
            <InputNumber @bind-Value="piece.PrixUnitaire" class="form-control" />
        </div>
        <div class="form-group col-sm-4">
            <label>Quantite stock</label>
            <InputNumber @bind-Value="piece.QuantiteStock" class="form-control" disabled="@modification" />
        </div>


        <button type="submit" class="btn btn-primary">@valeurButton</button>

    </div>
</EditForm>


@code {
    private Piece piece;
    private List<Piece> pieces = new List<Piece>();
    private bool modification = false;
    private string valeurButton;
    private string valeurAction = "";

    [Parameter]
    public string IdPiece { get; set; }


    protected override Task OnInitializedAsync()
    {
        piece = new();
        pieces = new();
        valeurButton = "Ajouter";

        if (!string.IsNullOrEmpty(IdPiece))
        {
            var guid = Guid.Parse(IdPiece);
            piece = stock.GetPiece(guid);
            valeurButton = "Modifier";
            modification = true;
        }

        return base.OnInitializedAsync();

    }


    private void OnSubmit()
    {
        if (!modification)
        {
            stock.AddPiece(piece);
            piece = new();
        }
        else
        {
            stock.ChangePiece(piece);
            valeurAction = "Modification éffectuée";
        }
    }


}

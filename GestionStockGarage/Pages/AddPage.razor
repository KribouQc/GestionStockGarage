@page "/addpage"

@using GestionStockGarage.Models
@using System.IO
@using System.Text.Json


<h1>Ajout d'un article</h1>

<EditForm OnValidSubmit="@OnSubmit" Model="piece">
    <div class="form">
        <div class="form-group col-sm-4">
            <label>Référence</label>
            <InputText @bind-Value="piece.Reference" class="form-control" />
        </div>
        <div class="form-group col-sm-4">
            <label>Desigantion</label>
            <InputText @bind-Value="piece.Designation" class="form-control" />
        </div>
        <div class="form-group col-sm-4">
            <label>Emplacement</label>
            <InputText @bind-Value="piece.Emplacement" class="form-control" />
        </div>
        <div class="form-group col-sm-4">
            <label>Prix unitaire</label>
            <InputNumber @bind-Value="piece.PrixUnitaire" class="form-control" />
        </div>
        <div class="form-group col-sm-4">
            <label>Quantite stock</label>
            <InputNumber @bind-Value="piece.QuantiteStock" class="form-control" />
        </div>

        <button type="submit">Ajouter</button>

    </div>
</EditForm>

@code {
    private Piece piece;
    private List<Piece> pieces = new List<Piece>();
    protected override Task OnInitializedAsync()
    {
        piece = new();
        pieces = new();

        pieces = new();

        if (File.Exists("Piece.json"))
        {
            var stringFile = File.ReadAllText("piece.json");
            pieces = JsonSerializer.Deserialize<List<Piece>>(stringFile);
        }
        return base.OnInitializedAsync();

    }


    private void OnSubmit()
    {
        pieces.Add(piece);
        string stringJson = JsonSerializer.Serialize<List<Piece>>(pieces);
        File.WriteAllText("piece.json", stringJson);
        piece = new();
    }


}
